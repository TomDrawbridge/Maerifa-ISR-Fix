// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: umqBp7PH6EsELMxj7VcR5D
// Component: dPjsQHSr76Zi

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import PageWrapper from "../../PageWrapper"; // plasmic-import: LxnEHVEe-YQz/component
import { Video } from "@plasmicpkgs/plasmic-basic-components";
import FramerMotion from "../../FramerMotion"; // plasmic-import: NKtmoaTySRQh/codeComponent
import Kicker from "../../Kicker"; // plasmic-import: sRJYTCOVASaN/component
import DropdownMenu2 from "../../DropdownMenu2"; // plasmic-import: dplT5okjZ4rM/component
import Button from "../../Button"; // plasmic-import: yRQ3u0JIMHGv/component
import BentoBox from "../../BentoBox"; // plasmic-import: DAE3NiFvGT61/component

import { useScreenVariants as useScreenVariantsjnoQdQuyEw7D } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: JnoQdQUYEw7d/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: umqBp7PH6EsELMxj7VcR5D/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: dPjsQHSr76Zi/css

import NotchSvgIcon from "./icons/PlasmicIcon__NotchSvg"; // plasmic-import: ox84ymJswMem/icon
import DownCircleSvgrepoComSvgIcon from "./icons/PlasmicIcon__DownCircleSvgrepoComSvg"; // plasmic-import: fJ3QUYRGexDQ/icon
import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: DNXHdlapq7ED/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: z4d4jzsZYGyL/icon
import HorizontalBlackHexagonSvgrepoComSvgIcon from "./icons/PlasmicIcon__HorizontalBlackHexagonSvgrepoComSvg"; // plasmic-import: ocx7rJgz5TzF/icon
import Layer12SvgIcon from "./icons/PlasmicIcon__Layer12Svg"; // plasmic-import: XGTI_fupuDy3/icon
import Icon16Icon from "./icons/PlasmicIcon__Icon16"; // plasmic-import: ItuLq8yvKyo9/icon
import Icon20Icon from "./icons/PlasmicIcon__Icon20"; // plasmic-import: FIOgRl_X1ii6/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: jAa4TRIEy4qG/icon
import Icon19Icon from "./icons/PlasmicIcon__Icon19"; // plasmic-import: rveEA9ywCfmC/icon
import Vector10SvgIcon from "./icons/PlasmicIcon__Vector10Svg"; // plasmic-import: kE1cgkVuXHP_/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: dHEGprUkPWw2/icon
import Asset1SvgIcon from "./icons/PlasmicIcon__Asset1Svg"; // plasmic-import: _E4W_BV0nYt0/icon
import WorldwideInternetSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__WorldwideInternetSvgrepoCom1Svg"; // plasmic-import: JXNlQ4Mfe2uf/icon
import Icon17Icon from "./icons/PlasmicIcon__Icon17"; // plasmic-import: qJlJlC1kTZlo/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: EZ80ff0mgCDm/icon
import Icon29Icon from "./icons/PlasmicIcon__Icon29"; // plasmic-import: gCCTv5fw8IjC/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<typeof PageWrapper>;
  heroWrapper?: Flex__<"header">;
  notchWrapper?: Flex__<"div">;
  link?: Flex__<"a"> & Partial<LinkProps>;
  heroInner?: Flex__<"div">;
  htmlVideo?: Flex__<typeof Video>;
  heroContent?: Flex__<"hgroup">;
  h1?: Flex__<"h1">;
  dropdownMenu2?: Flex__<typeof DropdownMenu2>;
  button?: Flex__<typeof Button>;
  section2?: Flex__<"section">;
  textContent?: Flex__<"div">;
  textContent3?: Flex__<"div">;
  textContent5?: Flex__<"div">;
  textContent6?: Flex__<"div">;
  accent?: Flex__<"div">;
  bentoGroupAccent?: Flex__<"div">;
  bentoGroup1?: Flex__<"div">;
  headerContent?: Flex__<"hgroup">;
  bentoBoxes?: Flex__<"hgroup">;
  bento1?: Flex__<typeof BentoBox>;
  bento2?: Flex__<typeof BentoBox>;
  bento3?: Flex__<typeof BentoBox>;
  bento4?: Flex__<typeof BentoBox>;
  accent2?: Flex__<typeof FramerMotion>;
  bentoBoxes2?: Flex__<"hgroup">;
  radialBg?: Flex__<"div">;
  accent3?: Flex__<"div">;
  section3?: Flex__<"header">;
  notchWrapper2?: Flex__<"div">;
  sectionInner?: Flex__<"div">;
  sectionContent?: Flex__<"div">;
  bentoBoxes3?: Flex__<"div">;
  bentoBoxes4?: Flex__<"hgroup">;
  radialBg2?: Flex__<"div">;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "counter",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "formSubmitted",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsjnoQdQuyEw7D()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />
        <link rel="canonical" href={PlasmicHomepage.pageMetadata.canonical} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <PageWrapper
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          bottomLineNavbar={(() => {
            try {
              return $ctx.isScrolled;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return false;
              }
              throw e;
            }
          })()}
          children2={
            <div className={classNames(projectcss.all, sty.freeBox__hQj9A)}>
              <header
                data-plasmic-name={"heroWrapper"}
                data-plasmic-override={overrides.heroWrapper}
                className={classNames(projectcss.all, sty.heroWrapper)}
              >
                <div
                  data-plasmic-name={"notchWrapper"}
                  data-plasmic-override={overrides.notchWrapper}
                  className={classNames(projectcss.all, sty.notchWrapper)}
                >
                  <NotchSvgIcon
                    className={classNames(projectcss.all, sty.svg__c0Xv)}
                    role={"img"}
                  />

                  <PlasmicLink__
                    data-plasmic-name={"link"}
                    data-plasmic-override={overrides.link}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link
                    )}
                    component={Link}
                    href={"#scroll"}
                    platform={"nextjs"}
                  >
                    <DownCircleSvgrepoComSvgIcon
                      className={classNames(projectcss.all, sty.svg__rjbvq)}
                      role={"img"}
                    />
                  </PlasmicLink__>
                </div>
                <div
                  data-plasmic-name={"heroInner"}
                  data-plasmic-override={overrides.heroInner}
                  className={classNames(projectcss.all, sty.heroInner)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nhQMa)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___07Iss
                      )}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___8WwKv
                      )}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__n84GP)}
                  >
                    <Video
                      data-plasmic-name={"htmlVideo"}
                      data-plasmic-override={overrides.htmlVideo}
                      autoPlay={true}
                      className={classNames("__wab_instance", sty.htmlVideo)}
                      controls={false}
                      loop={true}
                      muted={true}
                      playsInline={true}
                      preload={"auto"}
                      src={
                        "https://maerifa.sgp1.cdn.digitaloceanspaces.com/3130182-hd_1920_1080_30fps%20(1).mp4"
                      }
                    />
                  </div>
                  <Stack__
                    as={"hgroup"}
                    data-plasmic-name={"heroContent"}
                    data-plasmic-override={overrides.heroContent}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.heroContent)}
                  >
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion___4G3Sb
                      )}
                      delay={0}
                    >
                      <Kicker
                        className={classNames(
                          "__wab_instance",
                          sty.kicker__vjLg3
                        )}
                        text={"Infrastructure Leaders"}
                      />
                    </FramerMotion>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___3GWGs
                      )}
                    >
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__uw4HK
                        )}
                        delay={0.1}
                      >
                        <h1
                          data-plasmic-name={"h1"}
                          data-plasmic-override={overrides.h1}
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {"Leading-edge technology solutions on a "}
                            </React.Fragment>
                            {
                              <span
                                className={classNames(
                                  projectcss.all,
                                  projectcss.span,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.span__mY5VY
                                )}
                              >
                                {"global"}
                              </span>
                            }
                            <React.Fragment>{" scale"}</React.Fragment>
                          </React.Fragment>
                        </h1>
                        <FramerMotion
                          className={classNames(
                            "__wab_instance",
                            sty.framerMotion___62MCi
                          )}
                        >
                          <DropdownMenu2
                            data-plasmic-name={"dropdownMenu2"}
                            data-plasmic-override={overrides.dropdownMenu2}
                            className={classNames(
                              "__wab_instance",
                              sty.dropdownMenu2
                            )}
                          />
                        </FramerMotion>
                      </FramerMotion>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__brwCy
                        )}
                        delay={0.2}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tXoOk
                          )}
                        >
                          {
                            "Empowering enterprises worldwide with state-of-the-art ICT infrastructure, Maerifa Solutions drives the future of global technology with unparalleled digital innovation"
                          }
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qpW45
                          )}
                        >
                          <React.Fragment>
                            {(() => {
                              try {
                                return undefined;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "Empowering enterprises worldwide with state-of-the-art server infrastructure, Maerifa drives the future of global technology with unparalleled digital innovation.";
                                }
                                throw e;
                              }
                            })()}
                          </React.Fragment>
                        </div>
                      </FramerMotion>
                    </Stack__>
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion__cyJR
                      )}
                      delay={0.3}
                    >
                      <Button
                        data-plasmic-name={"button"}
                        data-plasmic-override={overrides.button}
                        className={classNames("__wab_instance", sty.button)}
                        endIcon={
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__xtrpw
                            )}
                            role={"img"}
                          />
                        }
                        onClick={async event => {
                          const $steps = {};

                          $steps["invokeGlobalAction"] = true
                            ? (() => {
                                const actionArgs = { args: ["dark"] };
                                return $globalActions["Theme.setTheme"]?.apply(
                                  null,
                                  [...actionArgs.args]
                                );
                              })()
                            : undefined;
                          if (
                            $steps["invokeGlobalAction"] != null &&
                            typeof $steps["invokeGlobalAction"] === "object" &&
                            typeof $steps["invokeGlobalAction"].then ===
                              "function"
                          ) {
                            $steps["invokeGlobalAction"] = await $steps[
                              "invokeGlobalAction"
                            ];
                          }
                        }}
                        showEndIcon={true}
                      >
                        {"Explore Solutions"}
                      </Button>
                    </FramerMotion>
                  </Stack__>
                </div>
              </header>
              <section
                data-plasmic-name={"section2"}
                data-plasmic-override={overrides.section2}
                className={classNames(projectcss.all, sty.section2)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___7VLXg)}
                  id={"scroll"}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nxshG)}
                    id={"scroll"}
                  >
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion__lyXS
                      )}
                      delay={0.1}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__qaBo
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <span
                              className={classNames(
                                projectcss.all,
                                projectcss.span,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.span__xLhvf
                              )}
                            >
                              {"Next-generation"}
                            </span>
                          }
                          <React.Fragment>
                            {" infrastructure and strategic innovation"}
                          </React.Fragment>
                        </React.Fragment>
                      </h2>
                    </FramerMotion>
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion__shXcd
                      )}
                      delay={0.2}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5ZpXd
                        )}
                      >
                        {
                          "Unlock the full potential of your technology infrastructure. Our consulting-led approach combines industry knowledge, financial acumen, and cutting-edge solutions to drive your competitive advantage"
                        }
                      </div>
                    </FramerMotion>
                  </Stack__>
                  <FramerMotion
                    className={classNames(
                      "__wab_instance",
                      sty.framerMotion__sfYuc
                    )}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__d203H)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__fLrS8)}
                        displayHeight={"auto"}
                        displayMaxHeight={"300px"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/maerifa_solutions/images/shutterstock23069056511Jpg.jpg",
                          fullWidth: 5120,
                          fullHeight: 2880,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qUFwS
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ubalN
                        )}
                      />
                    </div>
                  </FramerMotion>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__beTxr)}
                  >
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion__jLmkL
                      )}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vr3Zd
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"textContent"}
                          data-plasmic-override={overrides.textContent}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.textContent
                          )}
                        >
                          <HorizontalBlackHexagonSvgrepoComSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yaKxp
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0BsTp
                            )}
                          >
                            {"Unparalleled expertise"}
                          </div>
                        </Stack__>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kvjyd
                          )}
                        >
                          {
                            "Leverage our team's extensive experience from leading global brands to access cutting-edge solutions tailored for AI, cloud computing, gaming, and Web3"
                          }
                        </div>
                      </Stack__>
                    </FramerMotion>
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion__ooOd9
                      )}
                      delay={0.15}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__kGtVf
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"textContent3"}
                          data-plasmic-override={overrides.textContent3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.textContent3
                          )}
                        >
                          <HorizontalBlackHexagonSvgrepoComSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__caXje
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__edS78
                            )}
                          >
                            {"Future-proof solutions"}
                          </div>
                        </Stack__>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zyDcD
                          )}
                        >
                          {
                            "Receive bespoke infrastructure solutions designed to meet your specific needs while ensuring scalability and adaptability for tomorrow's challenges"
                          }
                        </div>
                      </Stack__>
                    </FramerMotion>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wtCkZ)}
                  >
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion__r7N8H
                      )}
                      delay={0.3}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vYn0R
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"textContent5"}
                          data-plasmic-override={overrides.textContent5}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.textContent5
                          )}
                        >
                          <HorizontalBlackHexagonSvgrepoComSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gAt96
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lNb
                            )}
                          >
                            {"Strategic partnerships"}
                          </div>
                        </Stack__>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sS6Q
                          )}
                        >
                          {
                            "Benefit from our financial acumen and vast network, positioning your business for long-term success and unlocking significant future value"
                          }
                        </div>
                      </Stack__>
                    </FramerMotion>
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion__faCns
                      )}
                      delay={0.45}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__yfwKq
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"textContent6"}
                          data-plasmic-override={overrides.textContent6}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.textContent6
                          )}
                        >
                          <HorizontalBlackHexagonSvgrepoComSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__shjE4
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kk9Dd
                            )}
                          >
                            {"Exclusive Supermicro infrastructure"}
                          </div>
                        </Stack__>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___3TUts
                          )}
                        >
                          {
                            "Gain privileged access to Supermicro's cutting-edge server technology through our partnership, ensuring you're always at the forefront of hardware innovation"
                          }
                        </div>
                      </Stack__>
                    </FramerMotion>
                  </Stack__>
                </Stack__>
                <FramerMotion
                  className={classNames(
                    "__wab_instance",
                    sty.framerMotion__eYs9N
                  )}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"accent"}
                    data-plasmic-override={overrides.accent}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.accent)}
                  >
                    <Layer12SvgIcon
                      className={classNames(projectcss.all, sty.svg__iyV4N)}
                      role={"img"}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__pO1AQ)}
                    />
                  </Stack__>
                </FramerMotion>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"bentoGroupAccent"}
                  data-plasmic-override={overrides.bentoGroupAccent}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.bentoGroupAccent)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"bentoGroup1"}
                    data-plasmic-override={overrides.bentoGroup1}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.bentoGroup1)}
                  >
                    <Stack__
                      as={"hgroup"}
                      data-plasmic-name={"headerContent"}
                      data-plasmic-override={overrides.headerContent}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.headerContent)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7QPu
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tIhQ5
                          )}
                        >
                          <FramerMotion
                            className={classNames(
                              "__wab_instance",
                              sty.framerMotion__qgK3
                            )}
                            delay={0.1}
                          >
                            <h2
                              className={classNames(
                                projectcss.all,
                                projectcss.h2,
                                projectcss.__wab_text,
                                sty.h2___8NonX
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>
                                  {
                                    "High-performance infrastructure solutions for "
                                  }
                                </React.Fragment>
                                {
                                  <span
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.span,
                                      projectcss.__wab_text,
                                      projectcss.plasmic_default__inline,
                                      sty.span___92BpI
                                    )}
                                  >
                                    {"next-generation applications"}
                                  </span>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </h2>
                          </FramerMotion>
                        </Stack__>
                        <FramerMotion
                          className={classNames(
                            "__wab_instance",
                            sty.framerMotion__pfJvK
                          )}
                          delay={0.2}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xvOn8
                            )}
                          >
                            {
                              "State-of-the-art hardware for diverse industries. From AI and cloud computing to gaming and Web3, our cutting-edge infrastructure ensures exceptional scalability for future-ready technology solutions"
                            }
                          </div>
                        </FramerMotion>
                      </Stack__>
                    </Stack__>
                    <hgroup
                      data-plasmic-name={"bentoBoxes"}
                      data-plasmic-override={overrides.bentoBoxes}
                      className={classNames(projectcss.all, sty.bentoBoxes)}
                    >
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__g0U8Q
                        )}
                        delay={0.1}
                      >
                        <BentoBox
                          data-plasmic-name={"bento1"}
                          data-plasmic-override={overrides.bento1}
                          className={classNames("__wab_instance", sty.bento1)}
                          description={
                            "Comprehensive solutions for diverse application needs."
                          }
                          destination={`/products`}
                          header={"All Products"}
                          slot={
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__oEBa)}
                              displayHeight={"100%"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"none"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"100%"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/maerifa_solutions/images/image3Png.png",
                                fullWidth: 502,
                                fullHeight: 784,
                                aspectRatio: undefined
                              }}
                            />
                          }
                          type={"noImage"}
                        >
                          <Icon16Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rwe0B
                            )}
                            role={"img"}
                          />
                        </BentoBox>
                      </FramerMotion>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__iiwmZ
                        )}
                      >
                        <BentoBox
                          className={classNames(
                            "__wab_instance",
                            sty.bentoBox__hPo8D
                          )}
                          description={
                            "Leverage Edge AI technology to deliver intelligent, real-time data processing at the source. By minimizing latency and reducing reliance on centralized cloud infrastructure, our Edge AI solutions enable faster decision-making and enhanced security"
                          }
                          destination={`/products`}
                          header={"Edge AI technology"}
                          slot={
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__dV8Sn)}
                              displayHeight={"100%"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"none"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"650px"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/maerifa_solutions/images/untitled5Png.png",
                                fullWidth: 869,
                                fullHeight: 430,
                                aspectRatio: undefined
                              }}
                            />
                          }
                          svgUrl={
                            '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 14" version="1.1" id="Cloud-Check--Streamline-Core">\t<path d="M7.056 1.82917C6.299174 1.9017040000000003 5.668376 2.1230439999999997 5.096 2.516934C4.45305 2.95939 3.939222 3.5974820000000003 3.6550640000000003 4.306386C3.5912240000000004 4.46565 3.6201760000000003 4.449074 3.33935 4.487182C2.6696880000000003 4.578028000000001 2.02062 4.8961500000000004 1.5169 5.380396C0.62622 6.23665 0.2828 7.512050000000001 0.623854 8.696982C0.744436 9.115932 0.9548840000000001 9.52154 1.232448 9.870000000000001C1.36087 10.031238 1.6423120000000002 10.303118 1.8135599999999998 10.431386000000002C2.14256 10.677814 2.512244 10.867094 2.863 10.968691999999999C3.01735 11.013408 3.3118819999999998 11.074 3.3748400000000003 11.074C3.443356 11.074 3.539018 11.021934 3.577308 10.963806C3.631348 10.881766 3.63615 10.807916 3.593128 10.720724C3.5433019999999997 10.619728 3.495002 10.591616 3.311 10.556448000000001C2.697772 10.43924 2.226812 10.183726 1.783992 9.727984C1.55246 9.489704 1.3815060000000001 9.237466 1.245314 8.933176C0.617484 7.530417999999999 1.224454 5.888344 2.615844 5.225402C2.910012 5.085234 3.1967040000000004 5.0066939999999995 3.568964 4.964288C3.8813459999999997 4.9287 3.980816 4.855354 4.087636 4.581794C4.364948 3.8717280000000005 4.807964 3.317342 5.4315240000000005 2.900156C6.019006 2.507092 6.74051 2.3033360000000003 7.455 2.328732C7.997822 2.348024 8.438276 2.460808 8.918000000000001 2.703344C9.595417999999999 3.04584 10.127208 3.584238 10.45849 4.263C10.637634 4.630052 10.735102 4.948048 10.792586 5.35311C10.80884 5.467658 10.834544 5.5893180000000005 10.849762 5.62373C10.918222 5.7785 11.022046 5.857138 11.242 5.920838C11.72486 6.060684 12.069218 6.273680000000001 12.394578000000001 6.633732C13.041462000000001 7.349608 13.183492000000001 8.399384000000001 12.751844 9.274524C12.63374 9.51398 12.51558 9.675204 12.29942 9.891854C12.008472000000001 10.18346 11.747358 10.346798 11.374104 10.470684C11.158924 10.542112000000001 11.040624 10.565954 10.808 10.584812C10.70405 10.593226 10.596222000000001 10.605938 10.56839 10.613050000000001C10.34544 10.67003 10.325938 10.982972 10.539452 11.077416000000001C10.596082000000001 11.102462000000001 10.620484 11.104464 10.764978000000001 11.095924C11.180498 11.071368 11.515938 10.98419 11.884096000000001 10.805088000000001C12.211528 10.645809999999999 12.45013 10.469984 12.717446 10.19102C13.53261 9.340324 13.735358 8.05378 13.223825999999999 6.977628C12.870144000000002 6.23357 12.179692 5.65348 11.392682 5.439196C11.304804 5.4152700000000005 11.306638 5.418182 11.291224 5.2780000000000005C11.260634 4.999931999999999 11.135894 4.54321 11.008508 4.242882C10.63356 3.358894 9.92474 2.618014 9.065 2.211482C8.635032 2.008174 8.216403999999999 1.890322 7.750302 1.841378C7.570793999999999 1.8225200000000001 7.194446 1.815912 7.056 1.82917M9.592142 8.269715999999999C9.561734 8.28471 9.024414 8.8788 8.061284 9.962358L6.577255999999999 11.6319 5.879412 11.108692C5.405792 10.75361 5.163927999999999 10.580752 5.1266739999999995 10.570714C4.895632 10.508512 4.7157599999999995 10.79869 4.876438 10.974432C4.9169540000000005 11.018756 6.45085 12.17041 6.510336000000001 12.201168C6.567204 12.230582000000002 6.686246 12.224169999999999 6.740258 12.188778C6.801872 12.148402 9.912812 8.639484 9.935828 8.584394000000001C9.983106 8.471232 9.9274 8.328852 9.813006 8.270527999999999C9.75289 8.239868 9.653476 8.239504 9.592142 8.269715999999999" stroke="none" fill="currentColor" fill-rule="evenodd"></path></svg>'
                          }
                          type={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "noImage"
                              : "midWidth"
                          }
                        >
                          <Icon20Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yNNx1
                            )}
                            role={"img"}
                          />
                        </BentoBox>
                      </FramerMotion>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__kKgS
                        )}
                        delay={0.2}
                      >
                        <BentoBox
                          data-plasmic-name={"bento2"}
                          data-plasmic-override={overrides.bento2}
                          className={classNames("__wab_instance", sty.bento2)}
                          description={
                            "Ideally suited to AI LLM and training and GenAI inference tasks, the Nvidia H100 solution can be architected with either Intel or AMD CPUs and flexible options for network and storage"
                          }
                          destination={`/products`}
                          header={
                            "DP Intel 8U System with NVIDIA HGX H100 8-GPU and Rear I/O Key"
                          }
                          noImageTypes={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "smallText"
                              : undefined
                          }
                          slot={
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__o28I5)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"none"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"150%"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/maerifa_solutions/images/h100StakcPng.png",
                                fullWidth: 954,
                                fullHeight: 682,
                                aspectRatio: undefined
                              }}
                            />
                          }
                          type={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "noImage"
                              : "midWidth"
                          }
                        >
                          <Icon18Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__p9TZ
                            )}
                            role={"img"}
                          />
                        </BentoBox>
                      </FramerMotion>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__weuRx
                        )}
                        delay={0}
                      >
                        <BentoBox
                          data-plasmic-name={"bento3"}
                          data-plasmic-override={overrides.bento3}
                          className={classNames("__wab_instance", sty.bento3)}
                          description={
                            "NVIDIA's new liquid-cooled GPU/CPU solution features 72 B200 GPUs and six advanced technologies, offering 30x better performance while cutting cost and energy use by 25x versus its predecessor"
                          }
                          destination={`/products`}
                          header={
                            "Supermicro NVIDIA GB200 (Grace Blackwell) NVL72 rack"
                          }
                          slot={
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__qBigi)}
                              displayHeight={"100%"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"none"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"120%"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/maerifa_solutions/images/gb200RackPng.png",
                                fullWidth: 684,
                                fullHeight: 781,
                                aspectRatio: undefined
                              }}
                            />
                          }
                          type={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "noImage"
                              : "midWidth"
                          }
                        >
                          <Icon19Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__unbOr
                            )}
                            role={"img"}
                          />
                        </BentoBox>
                      </FramerMotion>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__yv0T
                        )}
                        delay={0.1}
                      >
                        <BentoBox
                          data-plasmic-name={"bento4"}
                          data-plasmic-override={overrides.bento4}
                          className={classNames("__wab_instance", sty.bento4)}
                          description={
                            "Machine learning, deep learning, training, inference, generative AI and RAG, FPGA, ASIC, GPU & HPC."
                          }
                          destination={`/learn/${"artificial-intelligence"}`}
                          header={"Learn: Artificial Intelligence (AI)"}
                          slot={
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img___70Bia)}
                              displayHeight={"100%"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"none"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"100%"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/maerifa_solutions/images/image6Png.png",
                                fullWidth: 395,
                                fullHeight: 838,
                                aspectRatio: undefined
                              }}
                            />
                          }
                          type={"noImage"}
                        >
                          <Icon20Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mKk2N
                            )}
                            role={"img"}
                          />
                        </BentoBox>
                      </FramerMotion>
                      <FramerMotion
                        data-plasmic-name={"accent2"}
                        data-plasmic-override={overrides.accent2}
                        className={classNames("__wab_instance", sty.accent2)}
                      >
                        <Vector10SvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___6ZpKn
                          )}
                          role={"img"}
                        />
                      </FramerMotion>
                    </hgroup>
                  </Stack__>
                </Stack__>
                <hgroup
                  data-plasmic-name={"bentoBoxes2"}
                  data-plasmic-override={overrides.bentoBoxes2}
                  className={classNames(projectcss.all, sty.bentoBoxes2)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__qnqBt)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__njX2)}
                    >
                      <Kicker
                        className={classNames(
                          "__wab_instance",
                          sty.kicker__mOiZe
                        )}
                        color={"dark"}
                      />

                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__kzwgf
                        )}
                      >
                        {"Talk about broader services & products here."}
                      </h3>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9Zfl
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor."
                      }
                    </div>
                  </Stack__>
                  <BentoBox
                    className={classNames(
                      "__wab_instance",
                      sty.bentoBox__mqit7
                    )}
                    color={"white"}
                    header={"Edge AI Technology"}
                    slot={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__frUmA)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"none"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"428px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/maerifa_solutions/images/image7Png.png",
                          fullWidth: 876,
                          fullHeight: 509,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    svgUrl={
                      '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 14" version="1.1" id="Cloud-Check--Streamline-Core">\t<path d="M7.056 1.82917C6.299174 1.9017040000000003 5.668376 2.1230439999999997 5.096 2.516934C4.45305 2.95939 3.939222 3.5974820000000003 3.6550640000000003 4.306386C3.5912240000000004 4.46565 3.6201760000000003 4.449074 3.33935 4.487182C2.6696880000000003 4.578028000000001 2.02062 4.8961500000000004 1.5169 5.380396C0.62622 6.23665 0.2828 7.512050000000001 0.623854 8.696982C0.744436 9.115932 0.9548840000000001 9.52154 1.232448 9.870000000000001C1.36087 10.031238 1.6423120000000002 10.303118 1.8135599999999998 10.431386000000002C2.14256 10.677814 2.512244 10.867094 2.863 10.968691999999999C3.01735 11.013408 3.3118819999999998 11.074 3.3748400000000003 11.074C3.443356 11.074 3.539018 11.021934 3.577308 10.963806C3.631348 10.881766 3.63615 10.807916 3.593128 10.720724C3.5433019999999997 10.619728 3.495002 10.591616 3.311 10.556448000000001C2.697772 10.43924 2.226812 10.183726 1.783992 9.727984C1.55246 9.489704 1.3815060000000001 9.237466 1.245314 8.933176C0.617484 7.530417999999999 1.224454 5.888344 2.615844 5.225402C2.910012 5.085234 3.1967040000000004 5.0066939999999995 3.568964 4.964288C3.8813459999999997 4.9287 3.980816 4.855354 4.087636 4.581794C4.364948 3.8717280000000005 4.807964 3.317342 5.4315240000000005 2.900156C6.019006 2.507092 6.74051 2.3033360000000003 7.455 2.328732C7.997822 2.348024 8.438276 2.460808 8.918000000000001 2.703344C9.595417999999999 3.04584 10.127208 3.584238 10.45849 4.263C10.637634 4.630052 10.735102 4.948048 10.792586 5.35311C10.80884 5.467658 10.834544 5.5893180000000005 10.849762 5.62373C10.918222 5.7785 11.022046 5.857138 11.242 5.920838C11.72486 6.060684 12.069218 6.273680000000001 12.394578000000001 6.633732C13.041462000000001 7.349608 13.183492000000001 8.399384000000001 12.751844 9.274524C12.63374 9.51398 12.51558 9.675204 12.29942 9.891854C12.008472000000001 10.18346 11.747358 10.346798 11.374104 10.470684C11.158924 10.542112000000001 11.040624 10.565954 10.808 10.584812C10.70405 10.593226 10.596222000000001 10.605938 10.56839 10.613050000000001C10.34544 10.67003 10.325938 10.982972 10.539452 11.077416000000001C10.596082000000001 11.102462000000001 10.620484 11.104464 10.764978000000001 11.095924C11.180498 11.071368 11.515938 10.98419 11.884096000000001 10.805088000000001C12.211528 10.645809999999999 12.45013 10.469984 12.717446 10.19102C13.53261 9.340324 13.735358 8.05378 13.223825999999999 6.977628C12.870144000000002 6.23357 12.179692 5.65348 11.392682 5.439196C11.304804 5.4152700000000005 11.306638 5.418182 11.291224 5.2780000000000005C11.260634 4.999931999999999 11.135894 4.54321 11.008508 4.242882C10.63356 3.358894 9.92474 2.618014 9.065 2.211482C8.635032 2.008174 8.216403999999999 1.890322 7.750302 1.841378C7.570793999999999 1.8225200000000001 7.194446 1.815912 7.056 1.82917M9.592142 8.269715999999999C9.561734 8.28471 9.024414 8.8788 8.061284 9.962358L6.577255999999999 11.6319 5.879412 11.108692C5.405792 10.75361 5.163927999999999 10.580752 5.1266739999999995 10.570714C4.895632 10.508512 4.7157599999999995 10.79869 4.876438 10.974432C4.9169540000000005 11.018756 6.45085 12.17041 6.510336000000001 12.201168C6.567204 12.230582000000002 6.686246 12.224169999999999 6.740258 12.188778C6.801872 12.148402 9.912812 8.639484 9.935828 8.584394000000001C9.983106 8.471232 9.9274 8.328852 9.813006 8.270527999999999C9.75289 8.239868 9.653476 8.239504 9.592142 8.269715999999999" stroke="none" fill="currentColor" fill-rule="evenodd"></path></svg>'
                    }
                    type={"vertical"}
                  >
                    <Icon20Icon
                      className={classNames(projectcss.all, sty.svg__yTrPp)}
                      role={"img"}
                    />
                  </BentoBox>
                  <BentoBox
                    className={classNames(
                      "__wab_instance",
                      sty.bentoBox___7QoY6
                    )}
                    color={"white"}
                    header={"Machine Tooling"}
                    slot={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__wzgJt)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"none"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/maerifa_solutions/images/image6Png.png",
                          fullWidth: 395,
                          fullHeight: 838,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    svgUrl={
                      '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 14" version="1.1" id="Cloud-Check--Streamline-Core">\t<path d="M7.056 1.82917C6.299174 1.9017040000000003 5.668376 2.1230439999999997 5.096 2.516934C4.45305 2.95939 3.939222 3.5974820000000003 3.6550640000000003 4.306386C3.5912240000000004 4.46565 3.6201760000000003 4.449074 3.33935 4.487182C2.6696880000000003 4.578028000000001 2.02062 4.8961500000000004 1.5169 5.380396C0.62622 6.23665 0.2828 7.512050000000001 0.623854 8.696982C0.744436 9.115932 0.9548840000000001 9.52154 1.232448 9.870000000000001C1.36087 10.031238 1.6423120000000002 10.303118 1.8135599999999998 10.431386000000002C2.14256 10.677814 2.512244 10.867094 2.863 10.968691999999999C3.01735 11.013408 3.3118819999999998 11.074 3.3748400000000003 11.074C3.443356 11.074 3.539018 11.021934 3.577308 10.963806C3.631348 10.881766 3.63615 10.807916 3.593128 10.720724C3.5433019999999997 10.619728 3.495002 10.591616 3.311 10.556448000000001C2.697772 10.43924 2.226812 10.183726 1.783992 9.727984C1.55246 9.489704 1.3815060000000001 9.237466 1.245314 8.933176C0.617484 7.530417999999999 1.224454 5.888344 2.615844 5.225402C2.910012 5.085234 3.1967040000000004 5.0066939999999995 3.568964 4.964288C3.8813459999999997 4.9287 3.980816 4.855354 4.087636 4.581794C4.364948 3.8717280000000005 4.807964 3.317342 5.4315240000000005 2.900156C6.019006 2.507092 6.74051 2.3033360000000003 7.455 2.328732C7.997822 2.348024 8.438276 2.460808 8.918000000000001 2.703344C9.595417999999999 3.04584 10.127208 3.584238 10.45849 4.263C10.637634 4.630052 10.735102 4.948048 10.792586 5.35311C10.80884 5.467658 10.834544 5.5893180000000005 10.849762 5.62373C10.918222 5.7785 11.022046 5.857138 11.242 5.920838C11.72486 6.060684 12.069218 6.273680000000001 12.394578000000001 6.633732C13.041462000000001 7.349608 13.183492000000001 8.399384000000001 12.751844 9.274524C12.63374 9.51398 12.51558 9.675204 12.29942 9.891854C12.008472000000001 10.18346 11.747358 10.346798 11.374104 10.470684C11.158924 10.542112000000001 11.040624 10.565954 10.808 10.584812C10.70405 10.593226 10.596222000000001 10.605938 10.56839 10.613050000000001C10.34544 10.67003 10.325938 10.982972 10.539452 11.077416000000001C10.596082000000001 11.102462000000001 10.620484 11.104464 10.764978000000001 11.095924C11.180498 11.071368 11.515938 10.98419 11.884096000000001 10.805088000000001C12.211528 10.645809999999999 12.45013 10.469984 12.717446 10.19102C13.53261 9.340324 13.735358 8.05378 13.223825999999999 6.977628C12.870144000000002 6.23357 12.179692 5.65348 11.392682 5.439196C11.304804 5.4152700000000005 11.306638 5.418182 11.291224 5.2780000000000005C11.260634 4.999931999999999 11.135894 4.54321 11.008508 4.242882C10.63356 3.358894 9.92474 2.618014 9.065 2.211482C8.635032 2.008174 8.216403999999999 1.890322 7.750302 1.841378C7.570793999999999 1.8225200000000001 7.194446 1.815912 7.056 1.82917M9.592142 8.269715999999999C9.561734 8.28471 9.024414 8.8788 8.061284 9.962358L6.577255999999999 11.6319 5.879412 11.108692C5.405792 10.75361 5.163927999999999 10.580752 5.1266739999999995 10.570714C4.895632 10.508512 4.7157599999999995 10.79869 4.876438 10.974432C4.9169540000000005 11.018756 6.45085 12.17041 6.510336000000001 12.201168C6.567204 12.230582000000002 6.686246 12.224169999999999 6.740258 12.188778C6.801872 12.148402 9.912812 8.639484 9.935828 8.584394000000001C9.983106 8.471232 9.9274 8.328852 9.813006 8.270527999999999C9.75289 8.239868 9.653476 8.239504 9.592142 8.269715999999999" stroke="none" fill="currentColor" fill-rule="evenodd"></path></svg>'
                    }
                    type={"midWidth"}
                  >
                    <Icon21Icon
                      className={classNames(projectcss.all, sty.svg__lPOpy)}
                      role={"img"}
                    />
                  </BentoBox>
                </hgroup>
                <div
                  data-plasmic-name={"radialBg"}
                  data-plasmic-override={overrides.radialBg}
                  className={classNames(projectcss.all, sty.radialBg)}
                />

                <Stack__
                  as={"div"}
                  data-plasmic-name={"accent3"}
                  data-plasmic-override={overrides.accent3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.accent3)}
                >
                  <Layer12SvgIcon
                    className={classNames(projectcss.all, sty.svg__mSxtn)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__we2ZL)}
                  />
                </Stack__>
              </section>
              <header
                data-plasmic-name={"section3"}
                data-plasmic-override={overrides.section3}
                className={classNames(projectcss.all, sty.section3)}
              >
                <div
                  data-plasmic-name={"notchWrapper2"}
                  data-plasmic-override={overrides.notchWrapper2}
                  className={classNames(projectcss.all, sty.notchWrapper2)}
                >
                  <NotchSvgIcon
                    className={classNames(projectcss.all, sty.svg___2ZwT)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"sectionInner"}
                  data-plasmic-override={overrides.sectionInner}
                  className={classNames(projectcss.all, sty.sectionInner)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___61Lvi)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yb2D)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox___5V4)}
                    />
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"sectionContent"}
                    data-plasmic-override={overrides.sectionContent}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.sectionContent)}
                  >
                    <div
                      data-plasmic-name={"bentoBoxes3"}
                      data-plasmic-override={overrides.bentoBoxes3}
                      className={classNames(projectcss.all, sty.bentoBoxes3)}
                    >
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__lhk9N
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ph0LR
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jna7B
                            )}
                          >
                            <Kicker
                              className={classNames(
                                "__wab_instance",
                                sty.kicker__x8V87
                              )}
                              color={"dark"}
                              text={"Smart Infrastructure"}
                            />

                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3___6K6Zx
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>
                                  {"Technology solutions for "}
                                </React.Fragment>
                                {
                                  <span
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.span,
                                      projectcss.__wab_text,
                                      projectcss.plasmic_default__inline,
                                      sty.span__rMq0B
                                    )}
                                  >
                                    {"future-ready "}
                                  </span>
                                }
                                <React.Fragment>{"enterprises"}</React.Fragment>
                              </React.Fragment>
                            </h3>
                          </Stack__>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qret
                            )}
                          >
                            {
                              "Drive your digital transformation with cutting-edge technology, including Datacentre and Edge AI, and scalable IT infrastructure"
                            }
                          </div>
                        </Stack__>
                      </FramerMotion>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__ckKy
                        )}
                        delay={0.1}
                      >
                        <BentoBox
                          className={classNames(
                            "__wab_instance",
                            sty.bentoBox__bYji
                          )}
                          color={"white"}
                          description={
                            "State-of-the art AI infrastructure solutions integrate the latest technologies to optimise production workflows, increase efficiencies and improve product quality"
                          }
                          destination={`/products`}
                          header={"AI infrastructure"}
                          slot={
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__xqcOi)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"none"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"100%"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/maerifa_solutions/images/image6Png.png",
                                fullWidth: 395,
                                fullHeight: 838,
                                aspectRatio: undefined
                              }}
                            />
                          }
                          svgUrl={
                            '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 14" version="1.1" id="Cloud-Check--Streamline-Core">\t<path d="M7.056 1.82917C6.299174 1.9017040000000003 5.668376 2.1230439999999997 5.096 2.516934C4.45305 2.95939 3.939222 3.5974820000000003 3.6550640000000003 4.306386C3.5912240000000004 4.46565 3.6201760000000003 4.449074 3.33935 4.487182C2.6696880000000003 4.578028000000001 2.02062 4.8961500000000004 1.5169 5.380396C0.62622 6.23665 0.2828 7.512050000000001 0.623854 8.696982C0.744436 9.115932 0.9548840000000001 9.52154 1.232448 9.870000000000001C1.36087 10.031238 1.6423120000000002 10.303118 1.8135599999999998 10.431386000000002C2.14256 10.677814 2.512244 10.867094 2.863 10.968691999999999C3.01735 11.013408 3.3118819999999998 11.074 3.3748400000000003 11.074C3.443356 11.074 3.539018 11.021934 3.577308 10.963806C3.631348 10.881766 3.63615 10.807916 3.593128 10.720724C3.5433019999999997 10.619728 3.495002 10.591616 3.311 10.556448000000001C2.697772 10.43924 2.226812 10.183726 1.783992 9.727984C1.55246 9.489704 1.3815060000000001 9.237466 1.245314 8.933176C0.617484 7.530417999999999 1.224454 5.888344 2.615844 5.225402C2.910012 5.085234 3.1967040000000004 5.0066939999999995 3.568964 4.964288C3.8813459999999997 4.9287 3.980816 4.855354 4.087636 4.581794C4.364948 3.8717280000000005 4.807964 3.317342 5.4315240000000005 2.900156C6.019006 2.507092 6.74051 2.3033360000000003 7.455 2.328732C7.997822 2.348024 8.438276 2.460808 8.918000000000001 2.703344C9.595417999999999 3.04584 10.127208 3.584238 10.45849 4.263C10.637634 4.630052 10.735102 4.948048 10.792586 5.35311C10.80884 5.467658 10.834544 5.5893180000000005 10.849762 5.62373C10.918222 5.7785 11.022046 5.857138 11.242 5.920838C11.72486 6.060684 12.069218 6.273680000000001 12.394578000000001 6.633732C13.041462000000001 7.349608 13.183492000000001 8.399384000000001 12.751844 9.274524C12.63374 9.51398 12.51558 9.675204 12.29942 9.891854C12.008472000000001 10.18346 11.747358 10.346798 11.374104 10.470684C11.158924 10.542112000000001 11.040624 10.565954 10.808 10.584812C10.70405 10.593226 10.596222000000001 10.605938 10.56839 10.613050000000001C10.34544 10.67003 10.325938 10.982972 10.539452 11.077416000000001C10.596082000000001 11.102462000000001 10.620484 11.104464 10.764978000000001 11.095924C11.180498 11.071368 11.515938 10.98419 11.884096000000001 10.805088000000001C12.211528 10.645809999999999 12.45013 10.469984 12.717446 10.19102C13.53261 9.340324 13.735358 8.05378 13.223825999999999 6.977628C12.870144000000002 6.23357 12.179692 5.65348 11.392682 5.439196C11.304804 5.4152700000000005 11.306638 5.418182 11.291224 5.2780000000000005C11.260634 4.999931999999999 11.135894 4.54321 11.008508 4.242882C10.63356 3.358894 9.92474 2.618014 9.065 2.211482C8.635032 2.008174 8.216403999999999 1.890322 7.750302 1.841378C7.570793999999999 1.8225200000000001 7.194446 1.815912 7.056 1.82917M9.592142 8.269715999999999C9.561734 8.28471 9.024414 8.8788 8.061284 9.962358L6.577255999999999 11.6319 5.879412 11.108692C5.405792 10.75361 5.163927999999999 10.580752 5.1266739999999995 10.570714C4.895632 10.508512 4.7157599999999995 10.79869 4.876438 10.974432C4.9169540000000005 11.018756 6.45085 12.17041 6.510336000000001 12.201168C6.567204 12.230582000000002 6.686246 12.224169999999999 6.740258 12.188778C6.801872 12.148402 9.912812 8.639484 9.935828 8.584394000000001C9.983106 8.471232 9.9274 8.328852 9.813006 8.270527999999999C9.75289 8.239868 9.653476 8.239504 9.592142 8.269715999999999" stroke="none" fill="currentColor" fill-rule="evenodd"></path></svg>'
                          }
                          type={"noImage"}
                        >
                          <Icon21Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__e4FEg
                            )}
                            role={"img"}
                          />
                        </BentoBox>
                      </FramerMotion>
                    </div>
                  </Stack__>
                </div>
              </header>
              <div className={classNames(projectcss.all, sty.freeBox__nxFr)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kVqfL)}
                  id={"leadership"}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__uAEp1)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__uc2Nj)}
                    >
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__rx7Q
                        )}
                      >
                        <Kicker
                          className={classNames(
                            "__wab_instance",
                            sty.kicker___9BuOd
                          )}
                          color={"dark"}
                          text={"Strategic Pioneers"}
                        />
                      </FramerMotion>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__nz60S
                        )}
                        delay={0.1}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__neZv
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {"Industry-defining\n"}
                            </React.Fragment>
                            {
                              <span
                                className={classNames(
                                  projectcss.all,
                                  projectcss.span,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.span__zxXcy
                                )}
                              >
                                {"leadership"}
                              </span>
                            }
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </h2>
                      </FramerMotion>
                    </Stack__>
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion__jnKTo
                      )}
                      delay={0.2}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dCDoG
                        )}
                      >
                        {
                          "With the collective experience of the innovators leading Maerifa Solutions, we're able to deliver unparalleled, high-quality solutions tailored to meet the evolving needs of rapidly-changing industries"
                        }
                      </div>
                    </FramerMotion>
                  </Stack__>
                  <FramerMotion
                    className={classNames(
                      "__wab_instance",
                      sty.framerMotion__jKgJg
                    )}
                    delay={0.3}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__sZq7G)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__zu4Cx)}
                        displayHeight={"100%"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/maerifa_solutions/images/shutterstock2322524389Jpg.jpg",
                          fullWidth: 6000,
                          fullHeight: 4000,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__nqeA2
                        )}
                      />
                    </div>
                  </FramerMotion>
                </Stack__>
                <FramerMotion
                  className={classNames(
                    "__wab_instance",
                    sty.framerMotion__tghn2
                  )}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__qz9Wr)}
                    id={"experience"}
                  >
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion___9MdDt
                      )}
                      delay={0}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___4Rfc4
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__xFBtn)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/maerifa_solutions/images/blueChipShutterstock2206462635Jpg.jpg",
                            fullWidth: 6500,
                            fullHeight: 2109,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cvZaW
                          )}
                        />
                      </div>
                    </FramerMotion>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__k8MqB)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xgE5M
                        )}
                      >
                        <FramerMotion
                          className={classNames(
                            "__wab_instance",
                            sty.framerMotion__fmgHq
                          )}
                          delay={0.1}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__zywAt
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{"Decades of "}</React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span___5LfAa
                                  )}
                                >
                                  {"blue chip"}
                                </span>
                              }
                              <React.Fragment>{" experience"}</React.Fragment>
                            </React.Fragment>
                          </h3>
                        </FramerMotion>
                      </Stack__>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__itN50
                        )}
                        delay={0.2}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ypSzq
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {
                                "Drawing from decades of experience in technology, finance, and strategic development at pioneering global brands including "
                              }
                            </React.Fragment>
                            {
                              <span
                                className={classNames(
                                  projectcss.all,
                                  projectcss.span,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.span___9FeGl
                                )}
                              >
                                {"KPMG"}
                              </span>
                            }
                            <React.Fragment>{", "}</React.Fragment>
                            {
                              <span
                                className={classNames(
                                  projectcss.all,
                                  projectcss.span,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.span__lmnye
                                )}
                              >
                                {"Morgan Stanley"}
                              </span>
                            }
                            <React.Fragment>{", "}</React.Fragment>
                            {
                              <span
                                className={classNames(
                                  projectcss.all,
                                  projectcss.span,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.span__tC0Fr
                                )}
                              >
                                {"Goldman Sachs"}
                              </span>
                            }
                            <React.Fragment>{" and "}</React.Fragment>
                            {
                              <span
                                className={classNames(
                                  projectcss.all,
                                  projectcss.span,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.span__t6Fvs
                                )}
                              >
                                {"Intel"}
                              </span>
                            }
                            <React.Fragment>
                              {
                                ", we are poised to drive innovation and excellence, ensuring our clients stay ahead in a competitive landscape"
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </div>
                      </FramerMotion>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__l4Ezj
                        )}
                        delay={0.3}
                      >
                        <BentoBox
                          className={classNames(
                            "__wab_instance",
                            sty.bentoBox__tcf4Z
                          )}
                          noImageTypes={"slot"}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__pUHyJ
                            )}
                          >
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__l7Q4X
                              )}
                            >
                              <Asset1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__fq0PN
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___3JC1
                                )}
                              >
                                {
                                  "Sed do eiusmod tempor incididunt ut labore et."
                                }
                              </div>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__zQl4A
                              )}
                            >
                              <Asset1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__iCkej
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__eIfp8
                                )}
                              >
                                {
                                  "Lorem ipsum dolor sit amet, consectetur adipiscing."
                                }
                              </div>
                            </Stack__>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fzWgL
                              )}
                            >
                              <Asset1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__vwcMu
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xpiIw
                                )}
                              >
                                {
                                  "Ipsum dolor sit amet, consectetur adipiscing elit."
                                }
                              </div>
                            </Stack__>
                          </Stack__>
                        </BentoBox>
                      </FramerMotion>
                    </Stack__>
                  </Stack__>
                </FramerMotion>
                <FramerMotion
                  className={classNames(
                    "__wab_instance",
                    sty.framerMotion__nw0I
                  )}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__bIFlZ)}
                    id={"excellence"}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__w7MvY)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lAeg4
                        )}
                      >
                        <FramerMotion
                          className={classNames(
                            "__wab_instance",
                            sty.framerMotion__q9Myi
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__flUoH
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"Our committment to "}
                              </React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span__e6DAe
                                  )}
                                >
                                  {"excellence"}
                                </span>
                              }
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </h3>
                        </FramerMotion>
                      </Stack__>
                      <FramerMotion
                        className={classNames(
                          "__wab_instance",
                          sty.framerMotion__lnCnA
                        )}
                        delay={0.1}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2S7Nl
                          )}
                        >
                          {
                            "We look to ensure that we remain at the forefront of industry advancement to provide solutions that exceed expectations, placing long-term results for our clients as our top priority"
                          }
                        </div>
                      </FramerMotion>
                    </Stack__>
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion___4Vvka
                      )}
                      delay={0.3}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lCmLl
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__iyRIs)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/maerifa_solutions/images/committmentShutterstock468746906Jpg.jpg",
                            fullWidth: 3198,
                            fullHeight: 2048,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sgWjL
                          )}
                        />
                      </div>
                    </FramerMotion>
                    <Vector10SvgIcon
                      className={classNames(projectcss.all, sty.svg___9Pzfy)}
                      role={"img"}
                    />
                  </Stack__>
                </FramerMotion>
                <hgroup
                  data-plasmic-name={"bentoBoxes4"}
                  data-plasmic-override={overrides.bentoBoxes4}
                  className={classNames(projectcss.all, sty.bentoBoxes4)}
                  id={"attributes"}
                >
                  <FramerMotion
                    className={classNames(
                      "__wab_instance",
                      sty.framerMotion__i74Eu
                    )}
                    delay={0.1}
                  >
                    <BentoBox
                      className={classNames(
                        "__wab_instance",
                        sty.bentoBox__nHln
                      )}
                      description={
                        'Inspired by the Arabic word for "knowledge," Maerifa Solutions leverages cutting-edge technology and our deep industry vertical expertise to empower businesses. We turn innovative ideas into reality'
                      }
                      destination={`/our-approach`}
                      header={"Knowledge-driven"}
                      slot={
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__e4NHn)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/maerifa_solutions/images/image3Png.png",
                            fullWidth: 502,
                            fullHeight: 784,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      type={"noHoverButton"}
                    >
                      <WorldwideInternetSvgrepoCom1SvgIcon
                        className={classNames(projectcss.all, sty.svg__vt6Tf)}
                        role={"img"}
                      />
                    </BentoBox>
                  </FramerMotion>
                  <FramerMotion
                    className={classNames(
                      "__wab_instance",
                      sty.framerMotion___4HG2F
                    )}
                    delay={0.25}
                  >
                    <BentoBox
                      className={classNames(
                        "__wab_instance",
                        sty.bentoBox__ljIx8
                      )}
                      description={
                        "Our fluid offering adapts to your needs. We provide access to the latest components and configurations, guiding you through options to propel your ideas forward"
                      }
                      destination={`/products`}
                      header={"Tailored solutions"}
                      slot={
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__qYywP)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/maerifa_solutions/images/image3Png.png",
                            fullWidth: 502,
                            fullHeight: 784,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      type={"noHoverButton"}
                    >
                      <Icon17Icon
                        className={classNames(projectcss.all, sty.svg__qlMpj)}
                        role={"img"}
                      />
                    </BentoBox>
                  </FramerMotion>
                  <FramerMotion
                    className={classNames(
                      "__wab_instance",
                      sty.framerMotion__k8Jv9
                    )}
                    delay={0.4}
                  >
                    <BentoBox
                      className={classNames(
                        "__wab_instance",
                        sty.bentoBox___1H7L
                      )}
                      description={
                        "With a team of seasoned professionals and strong corporate alliances, we bring decades of cross-industry experience to enhance and safeguard your business"
                      }
                      destination={`/team`}
                      header={"Expert partnerships"}
                      slot={
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__qgMl)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/maerifa_solutions/images/image3Png.png",
                            fullWidth: 502,
                            fullHeight: 784,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      svgUrl={
                        '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 14" version="1.1" id="Database-Refresh--Streamline-Core"> \t<path d="M5.726 0.48497399999999996C3.33683 0.537096 1.317778 1.19266 0.699482 2.1170240000000002C0.601244 2.2638979999999997 0.5583899999999999 2.3536240000000004 0.513898 2.5057060000000004L0.483084 2.611 0.47884200000000005 5.9430000000000005C0.475916 8.246433999999999 0.47923400000000005 9.315404 0.489594 9.405872C0.5377120000000001 9.82597 0.8062320000000001 10.191734 1.309588 10.522848C2.084992 11.032896 3.3278280000000002 11.385626 4.859078 11.530218C5.101026 11.553066000000001 5.10622 11.552982 5.16859 11.525388C5.25966 11.48511 5.31013 11.413066 5.316556 11.314128C5.32266 11.22044 5.294912 11.159442 5.217814000000001 11.097044C5.171838 11.059832000000002 5.151804 11.054764 4.981298000000001 11.037277999999999C4.399332 10.97761 4.1055980000000005 10.936268 3.689 10.855376C2.318806 10.58932 1.316826 10.099782000000001 1.0561040000000002 9.569C1.02963 9.5151 1.0016720000000001 9.437064000000001 0.9939859999999999 9.395596000000001C0.980154 9.321004 0.9729720000000001 7.0280000000000005 0.9865659999999999 7.0280000000000005C0.9901780000000001 7.0280000000000005 1.052758 7.074606 1.125628 7.131572C1.74489 7.6156500000000005 2.809576 7.989142 4.081 8.168314C4.670274 8.251362 5.175268 8.287832000000002 5.7372000000000005 8.28793C6.135878 8.288 6.145048 8.286502 6.218604 8.208746000000001C6.291292 8.131928 6.30581 8.029755999999999 6.258042 7.931083999999999C6.224008 7.860776 6.16784 7.817166 6.087452 7.798629999999999C6.054202 7.790958 5.882099999999999 7.784503999999999 5.705 7.78428C4.09829 7.78225 2.45224 7.408925999999999 1.603 6.853966000000001C1.231356 6.6110940000000005 1.0269 6.359206 0.9942799999999999 6.104C0.986748 6.045032 0.9806720000000001 5.50872 0.9804340000000001 4.88082L0.98 3.7626260000000005 1.0395 3.811276C1.472464 4.16528 2.04477 4.439624 2.814 4.66193C4.437692 5.131154 6.71391 5.200216 8.537116 4.835586C9.57978 4.62707 10.445624 4.27847 10.9795 3.852282L11.088000000000001 3.765664 11.088000000000001 4.9283920000000006C11.088000000000001 6.061692 11.0887 6.092492 11.115874 6.145748C11.195044 6.300952 11.410602 6.332942 11.524968 6.20648C11.594562 6.129508 11.592014 6.19878 11.591887999999999 4.392948C11.591832000000002 3.311672 11.586652 2.6764360000000003 11.577440000000001 2.618C11.543028 2.3998939999999997 11.436992 2.1811160000000003 11.265044 1.9734540000000003C10.955994 1.6002280000000002 10.321612 1.233708 9.541 0.9773820000000001C8.509732 0.6387360000000001 7.088088 0.45525200000000005 5.726 0.48497399999999996M5.712 0.988792C3.791396 1.0398500000000002 2.123156 1.480024 1.351 2.139466C1.00289 2.43677 0.90734 2.745512 1.0647980000000001 3.064236C1.1836579999999999 3.304812 1.509214 3.577602 1.925 3.785012C2.92971 4.286198 4.39411 4.56372 6.034 4.56372C7.8053360000000005 4.56372 9.41157 4.231626 10.357144000000002 3.6698760000000004C10.553298 3.553354 10.652614 3.477964 10.798116 3.33515C10.920868 3.2146660000000002 10.993556 3.1127740000000004 11.044964 2.989112C11.092535999999999 2.874662 11.093936 2.690772 11.0481 2.5739560000000004C10.763578 1.8488540000000002 9.225958 1.224412 7.28 1.0436720000000002C6.83263 1.00212 6.132546 0.97762 5.712 0.988792M9.695 7.909748C9.509752 7.939694 9.349298000000001 7.980294 9.194192 8.036462C9.037868 8.093064 8.99696 8.120644 8.961917999999999 8.193052C8.91219 8.295755999999999 8.925644 8.396794 8.999395999999999 8.474746000000001C9.091012 8.571584 9.163798 8.575714000000001 9.403562 8.497720000000001C9.642584 8.41995 9.853900000000001 8.386000000000001 10.098886 8.386000000000001C10.855082000000001 8.386014 11.544246000000001 8.750714 11.961824000000002 9.371852C12.319986 9.904622 12.431608 10.577546 12.264658 11.197536L12.24853 11.25747 12.084758 11.044376C11.994696000000001 10.927182 11.903220000000001 10.818178 11.881478000000001 10.802148C11.850622 10.779398 11.821194 10.773 11.747386 10.773C11.66473 10.773 11.646152 10.778082000000001 11.599882000000001 10.813376C11.503926 10.886568 11.468618000000001 11.019148 11.519144 11.116546C11.565707999999999 11.206286 12.19085 12.018776 12.231128 12.04189C12.291902 12.076764 12.353586 12.085346000000001 12.418238 12.06793C12.495322 12.047182000000001 13.350567999999999 11.404498 13.39065 11.337214000000001C13.433658000000001 11.26503 13.428674 11.149572000000001 13.379338 11.075022C13.318508 10.983098 13.185018000000001 10.93708 13.08741 10.97439C13.069588000000001 10.981207999999999 12.998342 11.028584 12.929098 11.07967C12.85984 11.130756 12.801096000000001 11.166302 12.798562 11.158686C12.796014 11.151056 12.803392 11.083198000000001 12.814942 11.007906C12.878978 10.590678 12.84374 10.171518 12.710516 9.76577C12.553548000000001 9.287683999999999 12.253878 8.840957999999999 11.881996000000001 8.530676C11.463844 8.181796 10.989538 7.972048 10.46241 7.902958C10.247160000000001 7.874734 9.89212 7.877884000000001 9.695 7.909748M7.7490000000000006 9.214772C7.679504 9.254308000000002 6.883954 9.86391 6.8471340000000005 9.90584C6.7718 9.991646 6.776 10.125948000000001 6.8570459999999995 10.222254C6.903036 10.27691 6.966736 10.304 7.049252 10.304C7.127372 10.304 7.158004 10.288726 7.299628000000001 10.179162C7.3604579999999995 10.132094 7.412916000000001 10.096254 7.416192 10.099516C7.419454 10.102792 7.410928 10.173758 7.3972500000000005 10.257226C7.3632159999999995 10.465014 7.363244000000001 10.85721 7.397334 11.065292000000001C7.499142000000001 11.686696 7.768908000000001 12.201112 8.221332 12.636582C8.894129999999999 13.284194 9.866038 13.538742000000001 10.78 13.30672C10.948 13.264062000000001 11.136314 13.195378000000002 11.189948000000001 13.157186C11.238584 13.122564 11.283258 13.031928 11.283692 12.967051999999999C11.284042000000001 12.914608 11.252262 12.83079 11.216968 12.79103C11.184012 12.75393 11.090016 12.712672 11.037544 12.712308C11.013646 12.71214 10.919146 12.736752000000001 10.827544 12.766992C10.617166000000001 12.836446 10.487974 12.862752 10.270512 12.880419999999999C9.714936 12.925528 9.134874 12.743976 8.69953 12.388698000000002C8.56702 12.280562 8.37382 12.073712 8.27701 11.936344C7.956732 11.481862000000001 7.810683999999999 10.862432 7.897120000000001 10.325000000000001C7.915978000000001 10.20768 7.953666 10.047128 7.965384 10.034094C7.970788 10.028102 8.040858 10.109932 8.121106 10.215954C8.325548000000001 10.486042000000001 8.34596 10.502646 8.472632 10.501973999999999C8.57836 10.5014 8.657026 10.446394000000002 8.700328 10.342752C8.730204 10.271253999999999 8.727502000000001 10.221344 8.689842 10.148866C8.661856 10.095036 8.185716 9.454648 8.062488 9.3051C7.996408000000001 9.224908000000001 7.943866 9.198042000000001 7.854 9.198476C7.81165 9.198686 7.7644 9.206021999999999 7.7490000000000006 9.214772" stroke="none" fill="currentColor" fill-rule="evenodd"></path> </svg>'
                      }
                      type={"noHoverButton"}
                    >
                      <Icon22Icon
                        className={classNames(projectcss.all, sty.svg__kp04X)}
                        role={"img"}
                      />
                    </BentoBox>
                  </FramerMotion>
                  <BentoBox
                    className={classNames(
                      "__wab_instance",
                      sty.bentoBox__ec5Q2
                    )}
                    description={
                      "As a truly international innovator, Maerifa Solutions is driving global server infrastructure development from the Middle East, Europe, and Southeast Asia"
                    }
                    destination={`/locations`}
                    header={"Global infrastructure leaders"}
                    slot={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___20KVu)}
                        displayHeight={"100%"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"none"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/maerifa_solutions/images/image3Png.png",
                          fullWidth: 502,
                          fullHeight: 784,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    type={"globe"}
                  >
                    <Icon29Icon
                      className={classNames(projectcss.all, sty.svg__nk7Qs)}
                      role={"img"}
                    />
                  </BentoBox>
                </hgroup>
                <div
                  className={classNames(projectcss.all, sty.freeBox___73Zfe)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lxgxu)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox___55Gx)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__zZq37)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__rAaw
                        )}
                      >
                        <FramerMotion
                          className={classNames(
                            "__wab_instance",
                            sty.framerMotion__vVeSx
                          )}
                        >
                          <Kicker
                            className={classNames(
                              "__wab_instance",
                              sty.kicker___34FPq
                            )}
                            color={"dark"}
                          />
                        </FramerMotion>
                        <FramerMotion
                          className={classNames(
                            "__wab_instance",
                            sty.framerMotion__jXHy
                          )}
                          delay={0.1}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__f5EOg
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"Introductory Title about "}
                              </React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span___8X4Kc
                                  )}
                                >
                                  {"Maerifa Events"}
                                </span>
                              }
                              <React.Fragment>
                                {", Keynotes & Streams"}
                              </React.Fragment>
                            </React.Fragment>
                          </h3>
                        </FramerMotion>
                        <FramerMotion
                          className={classNames(
                            "__wab_instance",
                            sty.framerMotion__ect2H
                          )}
                          delay={0.2}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___13Es
                            )}
                          >
                            {
                              "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et."
                            }
                          </div>
                        </FramerMotion>
                      </Stack__>
                    </Stack__>
                    <FramerMotion
                      className={classNames(
                        "__wab_instance",
                        sty.framerMotion__trwJu
                      )}
                      delay={0.3}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__j3KT
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___8QyeZ)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/maerifa_solutions/images/alvaroPinotCzDvRp5V2B0UnsplashJpg.jpg",
                            fullWidth: 3024,
                            fullHeight: 4032,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rLmC9
                          )}
                        />
                      </div>
                    </FramerMotion>
                  </div>
                </div>
                <div
                  data-plasmic-name={"radialBg2"}
                  data-plasmic-override={overrides.radialBg2}
                  className={classNames(projectcss.all, sty.radialBg2)}
                />
              </div>
            </div>
          }
          className={classNames("__wab_instance", sty.root)}
        />
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroWrapper",
    "notchWrapper",
    "link",
    "heroInner",
    "htmlVideo",
    "heroContent",
    "h1",
    "dropdownMenu2",
    "button",
    "section2",
    "textContent",
    "textContent3",
    "textContent5",
    "textContent6",
    "accent",
    "bentoGroupAccent",
    "bentoGroup1",
    "headerContent",
    "bentoBoxes",
    "bento1",
    "bento2",
    "bento3",
    "bento4",
    "accent2",
    "bentoBoxes2",
    "radialBg",
    "accent3",
    "section3",
    "notchWrapper2",
    "sectionInner",
    "sectionContent",
    "bentoBoxes3",
    "bentoBoxes4",
    "radialBg2"
  ],
  heroWrapper: [
    "heroWrapper",
    "notchWrapper",
    "link",
    "heroInner",
    "htmlVideo",
    "heroContent",
    "h1",
    "dropdownMenu2",
    "button"
  ],
  notchWrapper: ["notchWrapper", "link"],
  link: ["link"],
  heroInner: [
    "heroInner",
    "htmlVideo",
    "heroContent",
    "h1",
    "dropdownMenu2",
    "button"
  ],
  htmlVideo: ["htmlVideo"],
  heroContent: ["heroContent", "h1", "dropdownMenu2", "button"],
  h1: ["h1"],
  dropdownMenu2: ["dropdownMenu2"],
  button: ["button"],
  section2: [
    "section2",
    "textContent",
    "textContent3",
    "textContent5",
    "textContent6",
    "accent",
    "bentoGroupAccent",
    "bentoGroup1",
    "headerContent",
    "bentoBoxes",
    "bento1",
    "bento2",
    "bento3",
    "bento4",
    "accent2",
    "bentoBoxes2",
    "radialBg",
    "accent3"
  ],
  textContent: ["textContent"],
  textContent3: ["textContent3"],
  textContent5: ["textContent5"],
  textContent6: ["textContent6"],
  accent: ["accent"],
  bentoGroupAccent: [
    "bentoGroupAccent",
    "bentoGroup1",
    "headerContent",
    "bentoBoxes",
    "bento1",
    "bento2",
    "bento3",
    "bento4",
    "accent2"
  ],
  bentoGroup1: [
    "bentoGroup1",
    "headerContent",
    "bentoBoxes",
    "bento1",
    "bento2",
    "bento3",
    "bento4",
    "accent2"
  ],
  headerContent: ["headerContent"],
  bentoBoxes: ["bentoBoxes", "bento1", "bento2", "bento3", "bento4", "accent2"],
  bento1: ["bento1"],
  bento2: ["bento2"],
  bento3: ["bento3"],
  bento4: ["bento4"],
  accent2: ["accent2"],
  bentoBoxes2: ["bentoBoxes2"],
  radialBg: ["radialBg"],
  accent3: ["accent3"],
  section3: [
    "section3",
    "notchWrapper2",
    "sectionInner",
    "sectionContent",
    "bentoBoxes3"
  ],
  notchWrapper2: ["notchWrapper2"],
  sectionInner: ["sectionInner", "sectionContent", "bentoBoxes3"],
  sectionContent: ["sectionContent", "bentoBoxes3"],
  bentoBoxes3: ["bentoBoxes3"],
  bentoBoxes4: ["bentoBoxes4"],
  radialBg2: ["radialBg2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: typeof PageWrapper;
  heroWrapper: "header";
  notchWrapper: "div";
  link: "a";
  heroInner: "div";
  htmlVideo: typeof Video;
  heroContent: "hgroup";
  h1: "h1";
  dropdownMenu2: typeof DropdownMenu2;
  button: typeof Button;
  section2: "section";
  textContent: "div";
  textContent3: "div";
  textContent5: "div";
  textContent6: "div";
  accent: "div";
  bentoGroupAccent: "div";
  bentoGroup1: "div";
  headerContent: "hgroup";
  bentoBoxes: "hgroup";
  bento1: typeof BentoBox;
  bento2: typeof BentoBox;
  bento3: typeof BentoBox;
  bento4: typeof BentoBox;
  accent2: typeof FramerMotion;
  bentoBoxes2: "hgroup";
  radialBg: "div";
  accent3: "div";
  section3: "header";
  notchWrapper2: "div";
  sectionInner: "div";
  sectionContent: "div";
  bentoBoxes3: "div";
  bentoBoxes4: "hgroup";
  radialBg2: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    heroWrapper: makeNodeComponent("heroWrapper"),
    notchWrapper: makeNodeComponent("notchWrapper"),
    link: makeNodeComponent("link"),
    heroInner: makeNodeComponent("heroInner"),
    htmlVideo: makeNodeComponent("htmlVideo"),
    heroContent: makeNodeComponent("heroContent"),
    h1: makeNodeComponent("h1"),
    dropdownMenu2: makeNodeComponent("dropdownMenu2"),
    button: makeNodeComponent("button"),
    section2: makeNodeComponent("section2"),
    textContent: makeNodeComponent("textContent"),
    textContent3: makeNodeComponent("textContent3"),
    textContent5: makeNodeComponent("textContent5"),
    textContent6: makeNodeComponent("textContent6"),
    accent: makeNodeComponent("accent"),
    bentoGroupAccent: makeNodeComponent("bentoGroupAccent"),
    bentoGroup1: makeNodeComponent("bentoGroup1"),
    headerContent: makeNodeComponent("headerContent"),
    bentoBoxes: makeNodeComponent("bentoBoxes"),
    bento1: makeNodeComponent("bento1"),
    bento2: makeNodeComponent("bento2"),
    bento3: makeNodeComponent("bento3"),
    bento4: makeNodeComponent("bento4"),
    accent2: makeNodeComponent("accent2"),
    bentoBoxes2: makeNodeComponent("bentoBoxes2"),
    radialBg: makeNodeComponent("radialBg"),
    accent3: makeNodeComponent("accent3"),
    section3: makeNodeComponent("section3"),
    notchWrapper2: makeNodeComponent("notchWrapper2"),
    sectionInner: makeNodeComponent("sectionInner"),
    sectionContent: makeNodeComponent("sectionContent"),
    bentoBoxes3: makeNodeComponent("bentoBoxes3"),
    bentoBoxes4: makeNodeComponent("bentoBoxes4"),
    radialBg2: makeNodeComponent("radialBg2"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title:
        "Maerifa Solutions | High-Performance Server Technology on a Global Scale",
      description:
        "Empowering enterprises worldwide with state-of-the-art ICT infrastructure, Maerifa drives the future of global technology with unparalleled digital innovation.",
      ogImageSrc:
        "https://site-assets.plasmic.app/b3057e91aebd89b3a78d6cd0f965fbb9.png",
      canonical: "https://maerifasolutions.com"
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
